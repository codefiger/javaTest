<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.figer.mapper.TLocationMapper" >
  <resultMap id="BaseResultMap" type="com.figer.gen.TLocation" >
    <result column="location_id" property="locationId" jdbcType="BIGINT" />
    <result column="abbr" property="abbr" jdbcType="CHAR" />
    <result column="name_chs" property="nameChs" jdbcType="CHAR" />
    <result column="name_cht" property="nameCht" jdbcType="CHAR" />
    <result column="name_en" property="nameEn" jdbcType="CHAR" />
    <result column="location_type" property="locationType" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="is_visible" property="isVisible" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    location_id, abbr, name_chs, name_cht, name_en, location_type, parent_id, is_visible
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.figer.gen.TLocationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public.t_location
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.figer.gen.TLocationExample" >
    delete from public.t_location
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.figer.gen.TLocation" >
    insert into public.t_location (location_id, abbr, name_chs, 
      name_cht, name_en, location_type, 
      parent_id, is_visible)
    values (#{locationId,jdbcType=BIGINT}, #{abbr,jdbcType=CHAR}, #{nameChs,jdbcType=CHAR}, 
      #{nameCht,jdbcType=CHAR}, #{nameEn,jdbcType=CHAR}, #{locationType,jdbcType=INTEGER}, 
      #{parentId,jdbcType=BIGINT}, #{isVisible,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.figer.gen.TLocation" >
    insert into public.t_location
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="locationId != null" >
        location_id,
      </if>
      <if test="abbr != null" >
        abbr,
      </if>
      <if test="nameChs != null" >
        name_chs,
      </if>
      <if test="nameCht != null" >
        name_cht,
      </if>
      <if test="nameEn != null" >
        name_en,
      </if>
      <if test="locationType != null" >
        location_type,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="isVisible != null" >
        is_visible,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="locationId != null" >
        #{locationId,jdbcType=BIGINT},
      </if>
      <if test="abbr != null" >
        #{abbr,jdbcType=CHAR},
      </if>
      <if test="nameChs != null" >
        #{nameChs,jdbcType=CHAR},
      </if>
      <if test="nameCht != null" >
        #{nameCht,jdbcType=CHAR},
      </if>
      <if test="nameEn != null" >
        #{nameEn,jdbcType=CHAR},
      </if>
      <if test="locationType != null" >
        #{locationType,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="isVisible != null" >
        #{isVisible,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.figer.gen.TLocationExample" resultType="java.lang.Integer" >
    select count(*) from public.t_location
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update public.t_location
    <set >
      <if test="record.locationId != null" >
        location_id = #{record.locationId,jdbcType=BIGINT},
      </if>
      <if test="record.abbr != null" >
        abbr = #{record.abbr,jdbcType=CHAR},
      </if>
      <if test="record.nameChs != null" >
        name_chs = #{record.nameChs,jdbcType=CHAR},
      </if>
      <if test="record.nameCht != null" >
        name_cht = #{record.nameCht,jdbcType=CHAR},
      </if>
      <if test="record.nameEn != null" >
        name_en = #{record.nameEn,jdbcType=CHAR},
      </if>
      <if test="record.locationType != null" >
        location_type = #{record.locationType,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.isVisible != null" >
        is_visible = #{record.isVisible,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update public.t_location
    set location_id = #{record.locationId,jdbcType=BIGINT},
      abbr = #{record.abbr,jdbcType=CHAR},
      name_chs = #{record.nameChs,jdbcType=CHAR},
      name_cht = #{record.nameCht,jdbcType=CHAR},
      name_en = #{record.nameEn,jdbcType=CHAR},
      location_type = #{record.locationType,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      is_visible = #{record.isVisible,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>