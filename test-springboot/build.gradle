/*
apply plugin: 'war'

war {
    baseName = 'myapp'
    version =  '0.5.0'
}
*/
/*apply plugin: 'application'
mainClassName = "com.figer.Main"

repositories {
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

dependencies{
        compile(
		    "org.springframework.boot:spring-boot-starter-web:1.4.0.RELEASE"
        )

}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.runtime.collect { it.getName() }.join(' '),
                'Main-Class': 'com.figer.Main'
        )
    }

    into('lib') {
        from configurations.runtime
    }
}*/

buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public'}
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.3'
    }
}

apply plugin: 'spring-boot'
apply plugin: 'eu.appsatori.fatjar'

repositories {
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

dependencies {
    compile(
            "org.springframework.boot:spring-boot-starter-web",
            libraries.swagger,
            libraries.swagger_ui,
            libraries.swagger_petstore,

            libraries.mysql_connector,
            libraries.commons_dbcp,
            libraries.commons_pool,
            libraries.mybatis,
            libraries.mybatis_spring,
            libraries.mybatis_generator,
            libraries.mybatis_paginator,
            libraries.spring_jdbc
    )
    testCompile("org.springframework.boot:spring-boot-starter-test")
}


/*jar {
    //from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest {
        attributes(
                'Class-Path': 'lib/' + configurations.runtime.collect { it.getName() }.join(' lib/'),
                'Main-Class': 'com.figer.Main'
        )
    }

    into('lib') {
        from configurations.runtime
    }
}*/

fatJar {

    manifest {
        attributes 'Main-Class': 'com.figer.Main'
    }
}

